################################################## 
# NexToneGenerateRoutes_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from NexToneGenerateRoutes_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI
import sys
from ZSI.generate.pyclass import pyclass_type

# Locator
class nextoneImportLCRLocator:
    generateRoutePortType_address = "https://ivms.nextone.com:443/rsm/ws/prov/lcr"
    def getgenerateRoutePortTypeAddress(self):
        return nextoneImportLCRLocator.generateRoutePortType_address
    def getgenerateRoutePortType(self, url=None, **kw):
        return generateRouteBindingSOAP(url or nextoneImportLCRLocator.generateRoutePortType_address, **kw)

# Methods
class generateRouteBindingSOAP:
    def __init__(self, url, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, tracefile=sys.stdout, **kw)
        # no ws-addressing

    # op: generateRoutes
    def generateRoutes(self, request):
        if isinstance(request, generateRoutesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        # no input wsaction
        self.binding.Send(None, None, request, soapaction="None", **kw)
        # no output wsaction
        response = self.binding.Receive(generateRoutesResponse.typecode)
        return response

_generateRoutesRequestTypecode = Struct(pname=("http://www.nextone.com/ivms/wsdl","generateRoutes"), ofwhat=[ns0.editConfig_Def(pname="generateRoutesRequest", aname="_generateRoutesRequest", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.nextone.com/ivms/wsdl")
class generateRoutesRequest:
    typecode = _generateRoutesRequestTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._generateRoutesRequest = None
        return
generateRoutesRequest.typecode.pyclass = generateRoutesRequest

_generateRoutesResponseTypecode = Struct(pname=("http://www.nextone.com/ivms/wsdl","generateRoutesResponse"), ofwhat=[ns0.reply_Def(pname="generateRoutesReply", aname="_generateRoutesReply", typed=False, encoded=None, minOccurs=1, maxOccurs=1, nillable=True)], pyclass=None, encoded="http://www.nextone.com/ivms/wsdl")
class generateRoutesResponse:
    typecode = _generateRoutesResponseTypecode
    __metaclass__ = pyclass_type
    def __init__(self):
        self._generateRoutesReply = None
        return
generateRoutesResponse.typecode.pyclass = generateRoutesResponse
