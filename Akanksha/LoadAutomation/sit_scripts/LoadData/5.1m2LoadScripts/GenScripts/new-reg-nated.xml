<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE scenario SYSTEM "sipp.dtd">

<!-- This program is free software; you can redistribute it and/or      -->
<!-- modify it under the terms of the GNU General Public License as     -->
<!-- published by the Free Software Foundation; either version 2 of the -->
<!-- License, or (at your option) any later version.                    -->
<!--                                                                    -->
<!-- This program is distributed in the hope that it will be useful,    -->
<!-- but WITHOUT ANY WARRANTY; without even the implied warranty of     -->
<!-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      -->
<!-- GNU General Public License for more details.                       -->
<!--                                                                    -->
<!-- You should have received a copy of the GNU General Public License  -->
<!-- along with this program; if not, write to the                      -->
<!-- Free Software Foundation, Inc.,                                    -->
<!-- 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA             -->
<!--                                                                    -->
<!--                 Sipp default 'uac' scenario.                       -->
<!--                                                                    -->

<scenario name="Basic Sipstone UAC">
  <!-- In client mode (sipp placing calls), the Call-ID MUST be         -->
  <!-- generated by sipp. To do so, use [call_id] token.                -->

  <label id="9"/>
  <send retrans="500">
    <![CDATA[

      REGISTER sip:as.syschar.com SIP/2.0
      Via: SIP/2.0/UDP [field3]:[local_port];branch=[branch]
      From: [field1] <sip:[field1]@[field2]>;tag=[call_number]
      To: [field1] <sip:[field1]@as.syschar.com>
      Contact: [field1] <sip:[field1]@[field3]:[local_port]>
      Call-ID: [call_id]
      CSeq: [cseq] REGISTER
      Expires: 191 
      Max-Forwards: 70
      Content-Length: 0

    ]]>
  </send>

  <recv response="100"
        optional="true">
  </recv>


  <recv response="403" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="404" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="408" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="400" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="500" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="504" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="503" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="401" auth="true" next="1">
  </recv>

  <recv response="200" auth="false" optional="true">
  </recv>
  <pause next="1" />

 <label id="1"/>
  <send retrans="500">
    <![CDATA[

      REGISTER sip:as.syschar.com SIP/2.0
      Via: SIP/2.0/UDP [field3]:[local_port];branch=[branch]
      From: [field1] <sip:[field1]@[field2]>;tag=[call_number]
      To: [field1] <sip:[field1]@as.syschar.com>
      Contact: [field1] <sip:[field1]@[field3]:[local_port]>
      [field0]
      Call-ID: [call_id]
      CSeq: [cseq+1] REGISTER
      Expires: 191 
      Max-Forwards: 70
      Content-Length: 0

    ]]>
  </send>

  <recv response="100"
        optional="true">
  </recv>

  <recv response="403" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="404" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="408" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="400" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="500" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="504" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>

  <recv response="503" optional="true" next="5">
  <action>
   <ereg regexp="CSeq: ([[:alnum:]]*) ([[:alnum:]]*)" search_in="msg" check_it="true" assign_to="2,3,4" />
  </action>
  </recv>
  <recv response="401" optional="true" auth="true" next="1"/>

  <recv response="200" auth="false">
  </recv>
  <pause next="1" />
  <label id="5"/>

  <pause milliseconds="5000" next="9"/>

  <!-- definition of the response time repartition table (unit is ms)   -->
  <ResponseTimeRepartition value="10, 20, 30, 40, 50, 100, 150, 200"/>

  <!-- definition of the call length repartition table (unit is ms)     -->
  <CallLengthRepartition value="10, 50, 100, 500, 1000, 5000, 10000"/>

</scenario>

